/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as _authenticatedRouteImport } from './routes/__authenticated'
import { Route as _authRouteImport } from './routes/__auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as _authenticatedAppRouteImport } from './routes/__authenticated/app'
import { Route as _authSignupRouteImport } from './routes/__auth/signup'
import { Route as _authLoginRouteImport } from './routes/__auth/login'
import { Route as _authenticatedAppTasksRouteImport } from './routes/__authenticated/app/tasks'
import { Route as _authenticatedAppHomeRouteImport } from './routes/__authenticated/app/home'
import { Route as _authenticatedAppCollectionsRouteImport } from './routes/__authenticated/app/collections'

const _authenticatedRoute = _authenticatedRouteImport.update({
  id: '/__authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const _authRoute = _authRouteImport.update({
  id: '/__auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const _authenticatedAppRoute = _authenticatedAppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => _authenticatedRoute,
} as any)
const _authSignupRoute = _authSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => _authRoute,
} as any)
const _authLoginRoute = _authLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => _authRoute,
} as any)
const _authenticatedAppTasksRoute = _authenticatedAppTasksRouteImport.update({
  id: '/tasks',
  path: '/tasks',
  getParentRoute: () => _authenticatedAppRoute,
} as any)
const _authenticatedAppHomeRoute = _authenticatedAppHomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => _authenticatedAppRoute,
} as any)
const _authenticatedAppCollectionsRoute =
  _authenticatedAppCollectionsRouteImport.update({
    id: '/collections',
    path: '/collections',
    getParentRoute: () => _authenticatedAppRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof _authLoginRoute
  '/signup': typeof _authSignupRoute
  '/app': typeof _authenticatedAppRouteWithChildren
  '/app/collections': typeof _authenticatedAppCollectionsRoute
  '/app/home': typeof _authenticatedAppHomeRoute
  '/app/tasks': typeof _authenticatedAppTasksRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof _authLoginRoute
  '/signup': typeof _authSignupRoute
  '/app': typeof _authenticatedAppRouteWithChildren
  '/app/collections': typeof _authenticatedAppCollectionsRoute
  '/app/home': typeof _authenticatedAppHomeRoute
  '/app/tasks': typeof _authenticatedAppTasksRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/__auth': typeof _authRouteWithChildren
  '/__authenticated': typeof _authenticatedRouteWithChildren
  '/__auth/login': typeof _authLoginRoute
  '/__auth/signup': typeof _authSignupRoute
  '/__authenticated/app': typeof _authenticatedAppRouteWithChildren
  '/__authenticated/app/collections': typeof _authenticatedAppCollectionsRoute
  '/__authenticated/app/home': typeof _authenticatedAppHomeRoute
  '/__authenticated/app/tasks': typeof _authenticatedAppTasksRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/signup'
    | '/app'
    | '/app/collections'
    | '/app/home'
    | '/app/tasks'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/signup'
    | '/app'
    | '/app/collections'
    | '/app/home'
    | '/app/tasks'
  id:
    | '__root__'
    | '/'
    | '/__auth'
    | '/__authenticated'
    | '/__auth/login'
    | '/__auth/signup'
    | '/__authenticated/app'
    | '/__authenticated/app/collections'
    | '/__authenticated/app/home'
    | '/__authenticated/app/tasks'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  _authRoute: typeof _authRouteWithChildren
  _authenticatedRoute: typeof _authenticatedRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/__authenticated': {
      id: '/__authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof _authenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__auth': {
      id: '/__auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof _authRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__authenticated/app': {
      id: '/__authenticated/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof _authenticatedAppRouteImport
      parentRoute: typeof _authenticatedRoute
    }
    '/__auth/signup': {
      id: '/__auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof _authSignupRouteImport
      parentRoute: typeof _authRoute
    }
    '/__auth/login': {
      id: '/__auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof _authLoginRouteImport
      parentRoute: typeof _authRoute
    }
    '/__authenticated/app/tasks': {
      id: '/__authenticated/app/tasks'
      path: '/tasks'
      fullPath: '/app/tasks'
      preLoaderRoute: typeof _authenticatedAppTasksRouteImport
      parentRoute: typeof _authenticatedAppRoute
    }
    '/__authenticated/app/home': {
      id: '/__authenticated/app/home'
      path: '/home'
      fullPath: '/app/home'
      preLoaderRoute: typeof _authenticatedAppHomeRouteImport
      parentRoute: typeof _authenticatedAppRoute
    }
    '/__authenticated/app/collections': {
      id: '/__authenticated/app/collections'
      path: '/collections'
      fullPath: '/app/collections'
      preLoaderRoute: typeof _authenticatedAppCollectionsRouteImport
      parentRoute: typeof _authenticatedAppRoute
    }
  }
}

interface _authRouteChildren {
  _authLoginRoute: typeof _authLoginRoute
  _authSignupRoute: typeof _authSignupRoute
}

const _authRouteChildren: _authRouteChildren = {
  _authLoginRoute: _authLoginRoute,
  _authSignupRoute: _authSignupRoute,
}

const _authRouteWithChildren = _authRoute._addFileChildren(_authRouteChildren)

interface _authenticatedAppRouteChildren {
  _authenticatedAppCollectionsRoute: typeof _authenticatedAppCollectionsRoute
  _authenticatedAppHomeRoute: typeof _authenticatedAppHomeRoute
  _authenticatedAppTasksRoute: typeof _authenticatedAppTasksRoute
}

const _authenticatedAppRouteChildren: _authenticatedAppRouteChildren = {
  _authenticatedAppCollectionsRoute: _authenticatedAppCollectionsRoute,
  _authenticatedAppHomeRoute: _authenticatedAppHomeRoute,
  _authenticatedAppTasksRoute: _authenticatedAppTasksRoute,
}

const _authenticatedAppRouteWithChildren =
  _authenticatedAppRoute._addFileChildren(_authenticatedAppRouteChildren)

interface _authenticatedRouteChildren {
  _authenticatedAppRoute: typeof _authenticatedAppRouteWithChildren
}

const _authenticatedRouteChildren: _authenticatedRouteChildren = {
  _authenticatedAppRoute: _authenticatedAppRouteWithChildren,
}

const _authenticatedRouteWithChildren = _authenticatedRoute._addFileChildren(
  _authenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  _authRoute: _authRouteWithChildren,
  _authenticatedRoute: _authenticatedRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
